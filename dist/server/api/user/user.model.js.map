{"version":3,"sources":["../../../../server/api/user/user.model.js"],"names":[],"mappings":"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","file":"user.model.js","sourcesContent":["'use strict';\n\nimport crypto from 'crypto';\nvar authTypes = ['github', 'twitter', 'facebook', 'google'];\n\nvar validatePresenceOf = function(value) {\n  return value && value.length;\n};\n\nmodule.exports = function(sequelize, DataTypes) {\n  var User = sequelize.define('User', {\n\n    _id: {\n      type: DataTypes.INTEGER,\n      allowNull: false,\n      primaryKey: true,\n      autoIncrement: true\n    },\n    name: DataTypes.STRING,\n    email: {\n      type: DataTypes.STRING,\n      unique: {\n        msg: 'The specified email address is already in use.'\n      },\n      validate: {\n        isEmail: true\n      }\n    },\n    role: {\n      type: DataTypes.STRING,\n      defaultValue: 'user'\n    },\n    password: {\n      type: DataTypes.STRING,\n      validate: {\n        notEmpty: true\n      }\n    },\n    provider: DataTypes.STRING,\n    salt: DataTypes.STRING,\n    google: DataTypes.TEXT,\n    github: DataTypes.TEXT\n\n  }, {\n\n    /**\n     * Virtual Getters\n     */\n    getterMethods: {\n      // Public profile information\n      profile: function() {\n        return {\n          'name': this.name,\n          'role': this.role\n        };\n      },\n\n      // Non-sensitive info we'll be putting in the token\n      token: function() {\n        return {\n          '_id': this._id,\n          'role': this.role\n        };\n      }\n    },\n\n    /**\n     * Pre-save hooks\n     */\n    hooks: {\n      beforeBulkCreate: function(users, fields, fn) {\n        var totalUpdated = 0;\n        users.forEach(function(user) {\n          user.updatePassword(function(err) {\n            if (err) {\n              return fn(err);\n            }\n            totalUpdated += 1;\n            if (totalUpdated === users.length) {\n              return fn();\n            }\n          });\n        });\n      },\n      beforeCreate: function(user, fields, fn) {\n        user.updatePassword(fn);\n      },\n      beforeUpdate: function(user, fields, fn) {\n        if (user.changed('password')) {\n          return user.updatePassword(fn);\n        }\n        fn();\n      }\n    },\n\n    /**\n     * Instance Methods\n     */\n    instanceMethods: {\n      /**\n       * Authenticate - check if the passwords are the same\n       *\n       * @param {String} password\n       * @param {Function} callback\n       * @return {Boolean}\n       * @api public\n       */\n      authenticate: function(password, callback) {\n        if (!callback) {\n          return this.password === this.encryptPassword(password);\n        }\n\n        var _this = this;\n        this.encryptPassword(password, function(err, pwdGen) {\n          if (err) {\n            callback(err);\n          }\n\n          if (_this.password === pwdGen) {\n            callback(null, true);\n          }\n          else {\n            callback(null, false);\n          }\n        });\n      },\n\n      /**\n       * Make salt\n       *\n       * @param {Number} byteSize Optional salt byte size, default to 16\n       * @param {Function} callback\n       * @return {String}\n       * @api public\n       */\n      makeSalt: function(byteSize, callback) {\n        var defaultByteSize = 16;\n\n        if (typeof arguments[0] === 'function') {\n          callback = arguments[0];\n          byteSize = defaultByteSize;\n        }\n        else if (typeof arguments[1] === 'function') {\n          callback = arguments[1];\n        }\n\n        if (!byteSize) {\n          byteSize = defaultByteSize;\n        }\n\n        if (!callback) {\n          return crypto.randomBytes(byteSize).toString('base64');\n        }\n\n        return crypto.randomBytes(byteSize, function(err, salt) {\n          if (err) {\n            callback(err);\n          }\n          return callback(null, salt.toString('base64'));\n        });\n      },\n\n      /**\n       * Encrypt password\n       *\n       * @param {String} password\n       * @param {Function} callback\n       * @return {String}\n       * @api public\n       */\n      encryptPassword: function(password, callback) {\n        if (!password || !this.salt) {\n          if (!callback) {\n            return null;\n          }\n          return callback(null);\n        }\n\n        var defaultIterations = 10000;\n        var defaultKeyLength = 64;\n        var salt = new Buffer(this.salt, 'base64');\n\n        if (!callback) {\n          return crypto.pbkdf2Sync(password, salt, defaultIterations, defaultKeyLength)\n                       .toString('base64');\n        }\n\n        return crypto.pbkdf2(password, salt, defaultIterations, defaultKeyLength,\n          function(err, key) {\n            if (err) {\n              callback(err);\n            }\n            return callback(null, key.toString('base64'));\n          });\n      },\n\n      /**\n       * Update password field\n       *\n       * @param {Function} fn\n       * @return {String}\n       * @api public\n       */\n      updatePassword: function(fn) {\n        // Handle new/update passwords\n        if (this.password) {\n          if (!validatePresenceOf(this.password) && authTypes.indexOf(this.provider) === -1) {\n            fn(new Error('Invalid password'));\n          }\n\n          // Make salt with a callback\n          var _this = this;\n          this.makeSalt(function(saltErr, salt) {\n            if (saltErr) {\n              fn(saltErr);\n            }\n            _this.salt = salt;\n            _this.encryptPassword(_this.password, function(encryptErr, hashedPassword) {\n              if (encryptErr) {\n                fn(encryptErr);\n              }\n              _this.password = hashedPassword;\n              fn(null);\n            });\n          });\n        } else {\n          fn(null);\n        }\n      }\n    }\n  });\n\n  return User;\n};\n"]}